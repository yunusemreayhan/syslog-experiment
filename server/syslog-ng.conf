@version: 3.28
@include "scl.conf"

# Global options
options {
    flush_lines(0);
    time_reopen(10);
    log_fifo_size(1000);
    chain_hostnames(off);
    use_dns(no);
    use_fqdn(no);
    create_dirs(yes);
    keep_hostname(yes);
};

# Sources
source s_local {
    # System sources
    system();
    
    # Internal syslog-ng messages
    internal();
    
    # Local unix socket (for local applications)
    unix-dgram("/dev/log" persist-name("local-syslog"));
};

source s_network {
    # UDP syslog
    network(
        ip("0.0.0.0")
        port(514)
        transport("udp")
    );
    
    # TCP syslog
    network(
        ip("0.0.0.0")
        port(514)
        transport("tcp")
    );
};

# Templates
template t_rfc5424 {
    template("<${PRI}>1 ${ISODATE} ${HOST} ${PROGRAM} ${PID} ${MSGID} ${SDATA} ${MSG}\n");
    template_escape(no);
};

template t_simple {
    template("$DATE $HOST $PROGRAM[$PID]: $LEVEL $MSG\n");
    template_escape(no);
};

# Destinations
destination d_local {
    file("/var/log/messages" 
        template(t_rfc5424)
    );
};

destination d_syslog_test {
    file("/var/log/syslog_test.log"
        template(t_rfc5424)
    );
};

destination d_forward_to_receiver {
    network("syslog-receiver" 
        port(514) 
        transport("udp")
        template(t_rfc5424)
    );
};

destination d_console {
    file("/dev/stdout"
        template(t_rfc5424)
    );
};

# Filters
filter f_syslog_test {
    program("syslog_test");
};

filter f_info {
    level(info);
};

filter f_warn {
    level(warning);
};

filter f_err {
    level(err);
};

filter f_debug {
    level(debug);
};

# Log paths
log {
    source(s_local);
    destination(d_local);
    destination(d_console);
};

log {
    source(s_local);
    filter(f_syslog_test);
    destination(d_syslog_test);
    destination(d_forward_to_receiver);
};

log {
    source(s_network);
    destination(d_local);
    destination(d_console);
};
